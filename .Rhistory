CI_RR2 <- round(exp(c(log(RR2) - 1.96 * sd_lnRR, log(RR2) + 1.96 * sd_lnRR)), 3)
CI_RR2
CI_RR2 <- round(exp(c(log(RR2) - 1.96 * sd_lnRR2, log(RR2) + 1.96 * sd_lnRR2)), 3)
CI_RR2
RR2 <- p1 / p2
RR2
chisq.test(mydata, correct=F)
eij <- chisq.test(mydata, correct = F)$expected
LR <- 2 * sum(mydata * log(mydata / eij))
LR
chisq.test(mydata, correct=F)
eij <- chisq.test(mydata, correct = F)$expected
LR <- 2 * sum(mydata * log(mydata / eij))
df <- chisq.test(mydata , correct = F)$parameter
p.value <- chisq.test(mydata , correct = F)$p.value
lr <- data.frame(LR , df, p.value)
rownames(lr) = c("LR Chi Square")
lr
fisher.test(mydata, alternative = "less")$p.value     # Left
fisher.test(mydata, alternative = "greater")$p.value  # Right
fisher.test(mydata)$p.value                           # 2-Tail
sqrt(chisq.test(mydata, correct=F)$statistic / sum(mydata))
chisq.test(mydata, correct=F)$statistic
a <- chisq.test(mydata, correct=F)$statistic
rho <- sqrt(chisq.test(mydata, correct=F)$statistic / sum(mydata))
names(rho)
rho
names(rho) <- NULL
rho
chi <- chisq.test(mydata, correct=F)$statistic
sqrt(chi / (chi + sum(mydata)))
chi <- chisq.test(mydata, correct=F)$statistic
coeff <- sqrt(chi / (chi + sum(mydata)))
names(coeff) <- NULL
coeff
rho2 <- chisq.test(mydata, correct=F)$statistic / sum(mydata)
sqrt(rho2 / min(ncol(mydata) - 1, nrow(mydata) - 1))
V <- sqrt(rho2 / min(ncol(mydata) - 1, nrow(mydata) - 1))
names(V) <- NULL
V
x11 <- mydata[1, 1]
x12 <- mydata[1, 2]
x21 <- mydata[2, 1]
x22 <- mydata[2, 2]
c(OR, CI_case_control)
rbind(c(OR, CI_case_control), c(RR1, CI_RR1), c(RR2, CI_RR2))
output <- rbind(c(OR, CI_case_control), c(RR1, CI_RR1), c(RR2, CI_RR2))
colnames(output) = c("Value", "Low bound", "Upper bound")
row.names(output) = c("Case-Control", "Cohort(Co1 1 Risk)", "Cohort(Co1 2 Risk)")
EstimateRR <- function(data) {
x11 <- mydata[1, 1]
x12 <- mydata[1, 2]
x21 <- mydata[2, 1]
x22 <- mydata[2, 2]
OR <-  x11 * x22 / (x12 * x21)
sd_lnOR <-  sqrt(sum(1 / mydata))
CI_case_control <- round(exp(c(log(OR) - 1.96 * sd_lnOR, log(OR) + 1.96 * sd_lnOR)), 3)
##  Relative Risk (RR) / column 1 Risk
p1 <- x11 / sum(x11 + x12)
p2 <- x21 / sum(x21 + x22)
RR1 <- p1 / p2
sd_lnRR1 <- sqrt((1 - p1) / (sum(x11 + x12) * p1) + (1 - p2) / (sum(x21 + x22) * p2))
CI_RR1 <- round(exp(c(log(RR1) - 1.96 * sd_lnRR1, log(RR1) + 1.96 * sd_lnRR1)), 3)
##  Relative Risk (RR) / column 2 Risk
p1 <- x12 / sum(x11 + x12)
p2 <- x22 / sum(x21 + x22)
RR2 <- p1 / p2
sd_lnRR2 <- sqrt((1 - p1) / (sum(x11 + x12) * p1) + (1 - p2) / (sum(x21 + x22) * p2))
CI_RR2 <- round(exp(c(log(RR2) - 1.96 * sd_lnRR2, log(RR2) + 1.96 * sd_lnRR2)), 3)
output <- rbind(c(OR, CI_case_control), c(RR1, CI_RR1), c(RR2, CI_RR2))
colnames(output) = c("Value", "Low bound", "Upper bound")
row.names(output) = c("Case-Control", "Cohort(Co1 1 Risk)", "Cohort(Co1 2 Risk)")
return(output)
}
EstimateRR(mydata)
V
mydata <- matrix(c(189, 10845, 104, 10933), ncol=2, byrow=T,
dimnames=list(c("placebo", "aspirin"), c("yes", "no")))
mydata
##  Chi-Square
chisq.test(mydata, correct=F)
##  Continuity Adj. Chi-Square
chisq.test(mydata)
##  Likelihood Ratio Chi-Square
eij <- chisq.test(mydata, correct = F)$expected
LR <- 2 * sum(mydata * log(mydata / eij))
df <- chisq.test(mydata , correct = F)$parameter
p.value <- chisq.test(mydata , correct = F)$p.value
lr <- data.frame(LR , df, p.value)
rownames(lr) = c("LR Chi Square")
lr
##  Fisher's Exact Test
fisher.test(mydata, alternative = "less")$p.value     # Left
fisher.test(mydata, alternative = "greater")$p.value  # Right
fisher.test(mydata)$p.value                           # 2-Tail
##  Phi Coefficient
rho <- sqrt(chisq.test(mydata, correct=F)$statistic / sum(mydata))
names(rho) <- NULL
rho
##  Continuity Coefficient
chi <- chisq.test(mydata, correct=F)$statistic
coeff <- sqrt(chi / (chi + sum(mydata)))
names(coeff) <- NULL
coeff
##  Cramer's V
rho2 <- chisq.test(mydata, correct=F)$statistic / sum(mydata)
V <- sqrt(rho2 / min(ncol(mydata) - 1, nrow(mydata) - 1))
names(V) <- NULL
V
runApp("~/Documents/GitHub/ChaoEntropyAppLocal")
require(shiny)
runApp("~/Documents/GitHub/ChaoEntropyAppLocal")
library("ChaoEntropy", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
setwd("~/Documents/GitHub/ChaoEntropyAppLocal")
load("data/Ant.rda")
load("data/Birds.rda")
load("data/Seedlings.rda")
load("data/Spider.rda")
load("data/Ant.rda")
load("data/Birds.rda")
load("data/Seedlings.rda")
load("data/Spider.rda")
source("sub.R")
source("ChaoEntropyOnlineFunction.R")
dataset <- list(Spider, Birds)
dataset
summ <- lapply(dataset, function(x) {
gvisTable(BasicInfoFun_Ind(x, input$nboot), options=list(width='90%', height='50%', sort='disable'))
})
summ <- lapply(dataset, function(x) {
gvisTable(BasicInfoFun_Ind(x, 200), options=list(width='90%', height='50%', sort='disable'))
})
plot(summ)
summ
plot(summ[1])
plot(summ[[1]])
summ[[1]]
summ[[1]]
a <- summ[[1]]
htmlOutput(summ)
a$html
a$html$footer
a$html$caption
a$html$-footer
a$html$[-footer]
a$html[-3]
a$html[-c(3:4)]
summ <- lapply(dataset, function(x) {
gvisTable(BasicInfoFun_Ind(x, 200), options=list(width='90%', height='50%', sort='disable'))
})
summ <- summ$html[-c(3:4)]
plot(summ[[1]])
summ <- lapply(dataset, function(x) {
gvisTable(BasicInfoFun_Ind(x, 200), options=list(width='90%', height='50%', sort='disable'))
})
summ$html <- summ$html[-c(3:4)]
summ[[1]]
plot(summ[[1]])
summ$html
summ[[1]]$html
summ[[1]]$html[-c(3:4)]
summ[[1]]$html <- summ[[1]]$html[-c(3:4)]
summ[[1]]$html
summ[[1]]
summ <- lapply(dataset, function(x) {
gvisTable(BasicInfoFun_Ind(x, 200), options=list(width='90%', height='50%', sort='disable'))
})
summ$html
summ <- lapply(dataset, function(x) {
gvisTable(BasicInfoFun_Ind(x, 200), options=list(width='90%', height='50%', sort='disable'))
})
for (i in seq_along(dataset)) {
summ[[i]]$html <- summ$html[-c(3:4)]
}
plot(summ[[1]])
summ <- lapply(dataset, function(x) {
gvisTable(BasicInfoFun_Ind(x, 200), options=list(width='90%', height='50%', sort='disable'))
})
for (i in seq_along(dataset)) {
summ[[i]]$html <- summ[[i]]$html[-c(3:4)]
}
plot(summ[[1]])
runApp("~/Documents/GitHub/ChaoEntropyAppLocal")
runApp("~/Documents/GitHub/ChaoEntropyAppLocal")
runApp("~/Documents/GitHub/ChaoEntropyAppLocal")
runApp("~/Documents/GitHub/ChaoEntropyAppLocal")
runApp("~/Documents/GitHub/ChaoEntropyAppLocal")
out <- lapply(dataset, function(x) {
temp <- ChaoEntropyOnline(data=x, datatype="abu")
temp <- round(temp, 3)
output <- as.data.frame(temp)
tab <- cbind(Method=rownames(output), output)
rownames(tab) <- NULL
gis <- gvisTable(tab, options=list(width='90%', height='60%'))
return(list(temp, gis))
})
out
out[1]
out[[1]]
out
out[[1]][[2]]
a <- out[[1]][[2]]
plot(out[[1]][[2]])
out <- lapply(dataset, function(x) {
temp <- ChaoEntropyOnline(data=x, datatype="abu", nboot=20)
temp <- round(temp, 3)
output <- as.data.frame(temp)
tab <- cbind(Method=rownames(output), output)
rownames(tab) <- NULL
gis <- gvisTable(tab, options=list(width='90%', height='60%'))
gis$html <- gis$html[-c(3:4)]
return(list(temp, gis))
})
plot(out[[1]][[2]])
runApp("~/Documents/GitHub/ChaoEntropyAppLocal")
runApp("~/Documents/GitHub/ChaoEntropyAppLocal")
plot(out[[1]][[2]])
runApp("~/Documents/GitHub/ChaoEntropyAppLocal")
runApp("~/Documents/GitHub/ChaoEntropyAppLocal")
runApp("~/Documents/GitHub/ChaoEntropyAppLocal")
require(shiny)
runApp("~/Documents/GitHub/ChaoEntropyOnline")
demo(googleVis)
df=data.frame(country=c("US", "GB", "BR"), val1=c(1,3,4), val2=c(23,12,32))
## Line chart
Line <- gvisLineChart(df,
options=list(legend='none', width=300, height=200))
plot(Line)
Line <- gvisLineChart(df)
plot(Line)
andle <- gvisCandlestickChart(OpenClose, xvar="Weekday", low="Low",
open="Open", close="Close",
high="High",
options=list(legend='none',
width=300, height=250))
plot(Candle)
Candle <- gvisCandlestickChart(OpenClose, xvar="Weekday", low="Low",
open="Open", close="Close",
high="High",
options=list(legend='none',
width=300, height=250))
plot(Candle)
Candle <- gvisCandlestickChart(OpenClose, xvar="Weekday", low="Low",
open="Open", close="Open",
high="High")
plot(Candle)
Candle <- gvisCandlestickChart(OpenClose, xvar="Weekday", low="Low",
open="Open", close="Close",
high="low")
Candle <- gvisCandlestickChart(OpenClose, xvar="Weekday", low="Low",
open="Open", close="Close",
high="Low")
plot(Candle)
pause <- function(){
invisible(readline("\nPress <return> to continue: "))
}
pause()
pause()
ChaoEntropy(Spider)
require(ChaoEntropy)
data(Spider)
a <- ChaoEntropy(Spider)
a
a <-
a <- ChaoEntropy(Spider)
b <- as.data.frame(rownames(a), a)
rownames(a)
b <- data.frame(rownames(a), a)
rownames(b) <- NULL
b
Scatter <- gvisScatterChart(women, options=list(legend="none",
lineWidth=2, pointSize=0, hAxis.title="weight",
title="Women", vAxis="{title:'height'}",
hAxis="{title:'weight'}", width=300, height=300))
plot(Scatter)
women
?gvisScatterChart
Scatter1 <- gvisScatterChart(women)
plot(Scatter1)
Scatter2 <- gvisScatterChart(women, options=list(legend="none",
lineWidth=2, pointSize=0,
title="Women", vAxis="{title:'weight (lbs)'}",
hAxis="{title:'height (in)'}", width=300, height=300))
plot(Scatter2)
df <- data.frame(Method=c("1", "2", "3"), Value=c(1,2,3))
df
df <- data.frame(Method=c("a", "b", "c"), Value=c(1,2,3))
plot(gvisScatterChart(df))
b <- data.frame(Methods=rownames(a), a)
b
a <- ChaoEntropy(Spider)
b <- data.frame(Methods=rownames(a), a)
b
colnames(b) <- c("Methods", "Estimator", "Bootstrap.s.e.", "95 % Lower",
"95 % Upper")
b
Candle <- gvisCandlestickChart(b, xvar="Methods", low="95 % Lower",
open="Estimator", close="Estimator",
high="95 % Upper",
options=list(width=500, height=550))
plot(Candle)
a <- round(ChaoEntropy(Spider), 3)
b <- data.frame(Methods=rownames(a), a)
rownames(b) <- NULL
colnames(b) <- c("Methods", "Estimator", "Bootstrap.s.e.", "95 % Lower",
"95 % Upper")
Candle <- gvisCandlestickChart(b, xvar="Methods", low="95 % Lower",
open="Estimator", close="Estimator",
high="95 % Upper",
options=list(width=500, height=550))
plot(Candle)
Candle <- gvisCandlestickChart(
b, xvar="Methods", low="95 % Lower",open="Estimator", close="Estimator",high="95 % Upper",
options=list(width=500, height=550, axisTitlesPosition="in")
)
plot(Candle)
Candle <- gvisCandlestickChart(
b, xvar="Methods", low="95 % Lower",open="Estimator", close="Estimator",high="95 % Upper",
options=list(width=500, height=550, axisTitlesPosition="none")
)
plot(Candle)
Candle <- gvisCandlestickChart(
b, xvar="Methods", low="95 % Lower",open="Estimator", close="Estimator",high="95 % Upper",
options=list(width=500, height=550, axisTitlesPosition="in")
)
plot(Candle)
Candle <- gvisCandlestickChart(
b, xvar="Methods", low="95 % Lower",open="Estimator", close="Estimator",high="95 % Upper",
options=list(width=500, height=550)
)
plot(Candle)
Candle <- gvisCandlestickChart(
b, xvar="Methods", low="95 % Lower",open="Estimator", close="Estimator",high="95 % Upper",
options=list(width=500, height=550, chartArea={left:20,top:0,width:"50%",height:"75%"})
)
Candle <- gvisCandlestickChart(
b, xvar="Methods", low="95 % Lower",open="Estimator", close="Estimator",high="95 % Upper",
options=list(width=500, height=550, colors='red')
)
plot(Candle)
Candle <- gvisCandlestickChart(
b, xvar="Methods", low="95 % Lower",open="Estimator", close="Estimator",high="95 % Upper",
options=list(width=500, height=550, colors='red','#004411')
)
plot(Candle)
Candle <- gvisCandlestickChart(
b, xvar="Methods", low="95 % Lower",open="Estimator", close="Estimator",high="95 % Upper",
options=list(width=500, height=550, colors='colors')
)
plot(Candle)
Candle <- gvisCandlestickChart(
b, xvar="Methods", low="95 % Lower",open="Estimator", close="Estimator",high="95 % Upper",
options=list(width=500, height=550, )
)
plot(Candle)
Candle <- gvisCandlestickChart(
b, xvar="Methods", low="95 % Lower",open="Estimator", close="Estimator",high="95 % Upper",
options=list(width=500, height=550)
)
plot(Candle)
Candle <- gvisCandlestickChart(
b, xvar="Methods", low="95 % Lower",open="Estimator", close="Estimator",high="95 % Upper",
options=list(width=500, height=550), colors='red'
)
plot(Candle)
Candle <- gvisCandlestickChart(
b, xvar="Methods", low="95 % Lower",open="Estimator", close="Estimator",high="95 % Upper",
options=list(width=500, height=550), colors='red'
)
plot(Candle)
Candle <- gvisCandlestickChart(
b, xvar="Methods", low="95 % Lower",open="Estimator", close="Estimator",high="95 % Upper",
options=list(width=500, height=550), colors:['red','#004411']
)
plot(Candle)
Candle <- gvisCandlestickChart(
b, xvar="Methods", low="95 % Lower",open="Estimator", close="Estimator",high="95 % Upper",
options=list(width=500, height=550), colors=['red','#004411']
)
plot(Candle)
Candle <- gvisCandlestickChart(
b, xvar="Methods", low="95 % Lower",open="Estimator", close="Estimator",high="95 % Upper",
options=list(width=500, height=550), colors='red'
)
plot(Candle)
source('~/.active-rstudio-document', echo=TRUE)
Candle <- gvisCandlestickChart(
b, xvar="Methods", low="95 % Lower",open="Estimator", close="Estimator",high="95 % Upper",
options=list(width=500, height=550, backgroundColor='red')
)
plot(Candle)
Candle <- gvisCandlestickChart(
b, xvar="Methods", low="95 % Lower",open="Estimator", close="Estimator",high="95 % Upper",
options=list(width=500, height=550, animation.easing="in")
)
plot(Candle)
Candle <- gvisCandlestickChart(
b, xvar="Methods", low="95 % Lower",open="Estimator", close="Estimator",high="95 % Upper",
options=list(width=500, height=550, animation.easing="inAndOut")
)
plot(Candle)
Candle <- gvisCandlestickChart(
b, xvar="Methods", low="95 % Lower",open="Estimator", close="Estimator",high="95 % Upper",
options=list(width=500, height=550, backgroundColor.stroke='red')
)
plot(Candle)
Candle <- gvisCandlestickChart(
b, xvar="Methods", low="95 % Lower",open="Estimator", close="Estimator",high="95 % Upper",
options=list(width=500, height=550, backgroundColor.stroke='pink')
)
plot(Candle)
Candle <- gvisCandlestickChart(
b, xvar="Methods", low="95 % Lower",open="Estimator", close="Estimator",high="95 % Upper",
options=list(width=500, height=550, backgroundColor.stroke='#FFFF00')
)
plot(Candle)
a <- round(ChaoEntropy(Spider), 3)
b <- data.frame(Methods=rownames(a), a)
a
pic <- gvisCandlestickChart(
b, xvar="Methods", low="95 % Lower",open="Estimator", close="Estimator",high="95 % Upper",
options=list(width=500, height=550)
)
plot(pic)
pic <- gvisCandlestickChart(
b, xvar="Methods", low="95 % Lower",open="Estimator", close="Estimator",high="95 % Upper",
options=list(width=500, height=550)
)
b
a <- round(ChaoEntropy(Spider), 3)
b <- data.frame(Methods=rownames(a), a)
rownames(b) <- NULL
colnames(b) <- c("Methods", "Estimator", "Bootstrap.s.e.", "95 % Lower",
"95 % Upper")
pic <- gvisCandlestickChart(
b, xvar="Methods", low="95 % Lower",open="Estimator", close="Estimator",high="95 % Upper",
options=list(width=500, height=550)
)
plot(pic)
pic$html
pic <- gvisCandlestickChart(
b, xvar="Methods", low="95 % Lower",open="Estimator", close="Estimator",high="95 % Upper",
options=list(width=500, height=550), title="123"
)
plot(pic)
pic <- gvisCandlestickChart(
b, xvar="Methods", low="95 % Lower",open="Estimator", close="Estimator",high="95 % Upper",
options=list(width=500, height=550, title="123")
)
plot(pic)
pic <- gvisCandlestickChart(
b, xvar="Methods", low="95 % Lower",open="Estimator", close="Estimator",high="95 % Upper",
options=list(width=500, height=550, title="123", colors='red')
)
plot(pic)
pic <- gvisCandlestickChart(
b, xvar="Methods", low="95 % Lower",open="Estimator", close="Estimator",high="95 % Upper",
options=list(width=500, height=550, title="123", colors='#004411')
)
plot(pic)
pic <- gvisCandlestickChart(
b, xvar="Methods", low="95 % Lower",open="Estimator", close="Estimator",high="95 % Upper",
options=list(width=500, height=550, title="123", colors='#FFFFFF')
)
plot(pic)
pic <- gvisCandlestickChart(
b, xvar="Methods", low="95 % Lower",open="Estimator", close="Estimator",high="95 % Upper",
options=list(width=500, height=550, title="123", colours='#FFFFE0')
)
plot(pic)
pic <- gvisCandlestickChart(
b, xvar="Methods", low="95 % Lower",open="Estimator", close="Estimator",high="95 % Upper",
options=list(width=500, height=550, title="123", colours='#FF3030')
)
plot(pic)
pic <- gvisCandlestickChart(
b, xvar="Methods", low="95 % Lower",open="Estimator", close="Estimator",high="95 % Upper",
options=list(width=500, height=550, title="123", colour='#FF3030')
)
plot(pic)
pic <- gvisCandlestickChart(
b, xvar="Methods", low="95 % Lower",open="Estimator", close="Estimator",high="95 % Upper",
options=list(width=500, height=550, title="123", colors='#FF3030')
)
plot(pic)
pic <- gvisCandlestickChart(
b, xvar="Methods", low="95 % Lower",open="Estimator", close="Estimator",high="95 % Upper",
options=list(width=500, height=550, title="123", colours='#FF3030')
)
plot(pic)
pic <- gvisCandlestickChart(
b, xvar="Methods", low="95 % Lower",open="Estimator", close="Estimator",high="95 % Upper",
options=list(width=500, height=550, title="123",
backgroundColor.stroke='#FF3030')
)
plot(pic)
pic <- gvisCandlestickChart(
b, xvar="Methods", low="95 % Lower",open="Estimator", close="Estimator",high="95 % Upper",
options=list(width=500, height=550, title="123",
backgroundColor.stroke='#FF3030',
backgroundColor.strokeWidth=10)
)
plot(pic)
pic <- gvisCandlestickChart(
b, xvar="Methods", low="95 % Lower",open="Estimator", close="Estimator",high="95 % Upper",
options=list(width=500, height=550, title="123",
backgroundColor.stroke='#FF3030',
backgroundColor.strokeWidth=10,
backgroundColor.fill='#FF3030')
)
plot(pic)
require(shiny)
